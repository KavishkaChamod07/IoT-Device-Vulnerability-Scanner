
import import_resources

def host_discovery():
    ip_addr = input('Enter the IP address: ')
    nm = import_resources.nmap.PortScanner()
    nm.scan(ip_addr, arguments='-sn')
    import_resources.hosts.clear()
    print(F"\n")
    for h in nm.all_hosts():
        import_resources.hosts.append((h, nm[h].hostname()))

        # Print information about each host
        print(f"IP Address: {h}")
        print(f"Hostname: {nm[h].hostname()}")
        # Check if MAC Address information is available
        mac_address = nm[h]['addresses'].get('mac', 'Not Available')
        print(f"MAC Address: {mac_address}")
        vendor_info = nm[h]['vendor']
        vendor = vendor_info.get(mac_address, 'Not Available')
        print(f"Vendor: {vendor}")
        print(f"State: {nm[h].state()}")

        for proto in nm[h].all_protocols():
            print(f"Protocol: {proto}")
            lport = nm[h][proto].keys()
        # Print a separator between hosts
        print("="*50)
    print(f"\nDerived IP addresses are:\n")    
    for ho in import_resources.hosts:
        print(f"Host: {ho[0]}")
    import_resources.menu_exit()
'''
def host_discovery():


    #This function performs host discovery by scanning the given IP address and prints information about the discovered hosts.

    # Ask for user input for IP address
    ip_addr = input('Enter the IP address: ')
    
    # Create a new PortScanner object
    nm = import_resources.nmap.PortScanner()
    
    # Scan the given IP address
    nm.scan(ip_addr, arguments='-sn')
    
    # Clear the list of hosts
    import_resources.hosts.clear()

    print(f"\n")

    # Iterate through all scanned hosts
    for h in nm.all_hosts():
        # Print information about each host
        print(f"IP Address: {h}")
        print(f"Hostname: {nm[h].hostname()}")
        # Check if MAC Address information is available
        mac_address = nm[h]['addresses'].get('mac', 'Not Available')
        print(f"MAC Address: {mac_address}")
        vendor_info = nm[h]['vendor']
        vendor = vendor_info.get(mac_address, 'Not Available')
        print(f"Vendor: {vendor}")
        print(f"State: {nm[h].state()}")
        # Iterate through all protocols for each host
        for proto in nm[h].all_protocols():
            print(f"Protocol: {proto}")
            # Get a list of open ports for the current protocol
            lport = nm[h][proto].keys()
            print("Open Ports:", list(lport))
        # Print a separator between hosts
        print("="*50)
    
    # Exit to the main menu
    import_resources.menu_exit(import_resources.no)

'''